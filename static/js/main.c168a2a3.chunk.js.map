{"version":3,"sources":["components/Condition.js","utils/validate.js","components/Error.js","components/InputFormField.js","components/SelectFormField.js","utils/addNotification.js","components/MainForm.js","components/App.js","index.js"],"names":["Condition","when","is","children","name","subscription","value","input","validate","values","errors","preparation_time","type","no_of_slices","diameter","slices_of_bread","spiciness_scale","Error","error","touched","meta","className","InputFormField","label","rest","component","SelectFormField","options","map","addNotification","title","message","store","insert","container","animationIn","animationOut","dismiss","duration","dismissable","click","onSubmit","a","fetch","method","headers","body","JSON","stringify","ok","MainForm","parseToFloat","isNaN","parseFloat","parseToInt","parseInt","initialValues","render","handleSubmit","form","restart","event","promise","then","placeholder","step","min","parse","max","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c168a2a3.chunk.js","sourcesContent":["import { Field } from 'react-final-form';\n\nexport const Condition = ({ when, is, children }) => (\n  <Field name={when} subscription={{ value: true }}>\n    {({ input: { value } }) => (value === is ? children : null)}\n  </Field>\n);","export const validate = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Required\";\n  }\n  if (!values.preparation_time) {\n    errors.preparation_time = \"Required\";\n  }\n  if (values.type === \"pizza\") {\n    if (!values.no_of_slices) {\n      errors.no_of_slices = \"Required\";\n    }\n    if (!values.diameter) {\n      errors.diameter = \"Required\";\n    }\n  } else if (values.type === \"sandwich\") {\n    if (!values.slices_of_bread) {\n      errors.slices_of_bread = \"Required\";\n    }\n  } else if (values.type === \"soup\") {\n    if (!values.spiciness_scale) {\n      errors.spiciness_scale = \"Required\";\n    }\n  }\n  return errors;\n}\n\n","import { Field } from 'react-final-form';\n\nexport const Error = ({ name }) => (\n  <Field name={name} subscription={{ error: true, touched: true }}>\n    {({ meta: { error, touched } }) =>\n      error && touched ? <span className=\"err\">{error}</span> : null\n    }\n  </Field>\n);","import { Field } from 'react-final-form';\nimport { Error } from './Error';\n\nexport const InputFormField = ({ label, name, ...rest }) => {\n\n  return (\n    <div className=\"row\">\n      <label>{label}</label>\n      <Field\n        name={name}\n        component=\"input\"\n        className=\"input\"\n        {...rest}\n      />\n      <Error name={name} />\n    </div>\n  );\n}","import { Field } from 'react-final-form';\nimport { Error } from './Error';\n\nexport const SelectFormField = ({ label, name, options, ...rest }) => {\n\n  return (\n    <div className=\"row\">\n      <label>{label}</label>\n      <Field\n        name={name}\n        component=\"select\"\n        className=\"input\"\n        {...rest}\n      >\n        {\n          options.map(({ name, value }) => {\n            return <option key={name} value={name}>{value}</option>;\n          })\n        }\n      </Field>\n      <Error name={name} />\n    </div>\n  );\n}","import { store } from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\nimport 'animate.css';\n\nexport function addNotification(title, message, type) {\n  store.addNotification({\n    title: title,\n    message: message,\n    type: type,\n    insert: \"top\",\n    container: \"top-right\",\n    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n    dismiss: { duration: 3000 },\n    dismissable: { click: true }\n  })\n}\n\n\n","import { Condition } from './Condition';\nimport { Form } from 'react-final-form';\nimport { validate } from '../utils/validate';\nimport { InputFormField } from './InputFormField';\nimport { SelectFormField } from './SelectFormField';\nimport { addNotification } from '../utils/addNotification';\n\nconst onSubmit = async (values) => {\n  try {\n    const response = await fetch('https://frosty-wood-6558.getsandbox.com:443/dishes', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(values),\n    });\n\n    if (response.ok) {\n      addNotification(\"Thank You\", \"You have successfully placed your order\", \"success\");\n    } else {\n      addNotification(\"Oops!\", \"Please, try again\", \"danger\");\n    }\n  } catch (err) {\n    addNotification(\"Oops!\", \"Please, try again\", \"danger\");\n  }\n};\n\nexport const MainForm = () => {\n\n  const parseToFloat = value => (isNaN(parseFloat(value)) ? \"\" : parseFloat(value));\n\n  const parseToInt = value => (isNaN(parseInt(value)) ? \"\" : parseInt(value));\n\n  const options = [\n    { name: \"pizza\", value: \"Pizza\" },\n    { name: \"soup\", value: \"Soup\" },\n    { name: \"sandwich\", value: \"Sandwich\" },\n  ];\n\n  return (\n    <Form\n      validate={validate}\n      onSubmit={onSubmit}\n      initialValues={{ type: \"pizza\", preparation_time: \"00:20:00\" }}\n      render={({ handleSubmit, form, restart }) => (\n\n        <form\n          className=\"form\"\n          onSubmit={event => {\n            const promise = handleSubmit(event);\n            promise && promise.then(() => {\n              form.restart();\n            })\n            return promise;\n          }}\n        >\n          <InputFormField label=\"Name Your Dish\" name=\"name\" type=\"text\" placeholder=\"Dish Name\" />\n\n          <InputFormField label=\"Preparation Time\" name=\"preparation_time\" type=\"time\" step=\"1\" />\n\n          <SelectFormField label=\"Select Dish\" name=\"type\" options={options} />\n\n          <Condition when=\"type\" is=\"pizza\">\n            <InputFormField label=\"Number of slices\" name=\"no_of_slices\" type=\"number\" min=\"0\" placeholder=\"0\" parse={parseToInt} />\n            <InputFormField label=\"Diameter\" name=\"diameter\" type=\"number\" step=\"0.01\" min=\"0.00\" placeholder=\"0.00\" parse={parseToFloat} />\n          </Condition>\n\n          <Condition when=\"type\" is=\"soup\">\n            <InputFormField label=\"Select Spiceness\" name=\"spiciness_scale\" type=\"number\" step=\"1\" min=\"1\" max=\"10\" placeholder=\"1\" parse={parseToInt} />\n          </Condition>\n\n          <Condition when=\"type\" is=\"sandwich\">\n            <InputFormField label=\"Number of bread slices\" name=\"slices_of_bread\" type=\"number\" min=\"0\" placeholder=\"0\" parse={parseToInt} />\n          </Condition>\n\n          <button className=\"btn\" type=\"submit\">Submit</button>\n        </form>\n      )}\n    />\n  )\n}\n","import { MainForm } from './MainForm'\nimport ReactNotification from 'react-notifications-component';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ReactNotification />\n      <MainForm />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}